// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { DetectAccentDetectAccentPostData, DetectAccentDetectAccentPostResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Default {
    /**
     * Detect Accent
     *
     * Accept an uploaded audio file and return a mock accent detection response.
     *
     * You will later add the real detection logic here.
     */
    public static detectAccentDetectAccentPost<ThrowOnError extends boolean = false>(options?: Options<DetectAccentDetectAccentPostData, ThrowOnError>) {
        return (options?.client ?? client).post<DetectAccentDetectAccentPostResponses, unknown, ThrowOnError>({
            url: '/detect-accent',
            ...options
        });
    }
}
